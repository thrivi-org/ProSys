<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Upload and Transcript Processing</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .highlight {
            background-color: yellow;
        }
    </style>
</head>
<body>
<div class="container mt-5">
    <h1 class="text-center">Upload File for Transcription</h1>
    <form id="uploadForm" class="mt-4">
        <div class="mb-3">
            <label for="fileInput" class="form-label">Select your file:</label>
            <input type="file" id="fileInput" class="form-control" accept=".wav, .mp3, .m4a" required>
        </div>
        <button type="submit" class="btn btn-primary">Upload and Process</button>
    </form>
    <div id="outputSection" class="mt-4" style="display: none;">
        <h3>Processed Transcript:</h3>
        <pre id="transcriptOutput" class="p-3 border rounded"></pre>
        <a id="downloadLink" href="#" class="btn btn-success mt-3">Download Transcript</a>
    </div>
</div>

<script>
    document.getElementById('uploadForm').addEventListener('submit', async function (event) {
        event.preventDefault();

        const fileInput = document.getElementById('fileInput');
        const file = fileInput.files[0];
        if (!file) {
            alert('Please select a file before submitting.');
            return;
        }

        const formData = new FormData();
        formData.append('file', file);

        try {
            // Mock API call to upload and process the file
            const response = await fetch('https://your-api-endpoint/transcribe', {
                method: 'POST',
                body: formData
            });

            if (!response.ok) {
                throw new Error('Failed to process file.');
            }

            const data = await response.json();
            let transcript = data.transcript || '';

            // Highlight numbers in the transcript
            transcript = transcript.replace(/\b\d+\b/g, '<span class="highlight">$&</span>');

            // Display processed transcript
            const transcriptOutput = document.getElementById('transcriptOutput');
            transcriptOutput.innerHTML = transcript;

            // Prepare the downloadable file
            const plainTextTranscript = transcript.replace(/<[^>]+>/g, '');
            const blob = new Blob([plainTextTranscript], { type: 'text/plain' });
            const downloadLink = document.getElementById('downloadLink');
            downloadLink.href = URL.createObjectURL(blob);
            downloadLink.download = 'transcript.txt';

            // Show the output section
            document.getElementById('outputSection').style.display = 'block';
        } catch (error) {
            console.error(error);
            alert('An error occurred while processing your file.');
        }
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
